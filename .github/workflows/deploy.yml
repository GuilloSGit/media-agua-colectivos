name: Deploy Next.js site to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Paso 1: Detectar gestor de paquetes
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> "$GITHUB_OUTPUT"
            echo "command=install" >> "$GITHUB_OUTPUT"
            echo "runner=pnpm" >> "$GITHUB_OUTPUT"
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> "$GITHUB_OUTPUT"
            echo "command=install" >> "$GITHUB_OUTPUT"
            echo "runner=yarn" >> "$GITHUB_OUTPUT"
          elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
            echo "manager=npm" >> "$GITHUB_OUTPUT"
            echo "command=ci" >> "$GITHUB_OUTPUT"
            echo "runner=npx --no-install" >> "$GITHUB_OUTPUT"
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      # Paso 2: Setup Node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # Paso 3: Instalar pnpm si hace falta
      - name: Install pnpm
        run: npm install -g pnpm

      # Paso 4: Instalar dependencias
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.runner }} ${{ steps.detect-package-manager.outputs.command }}

      # Paso 5: Compilar con Next.js
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build && ${{ steps.detect-package-manager.outputs.runner }} next export

      # Paso 6: Subir el resultado est√°tico
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
